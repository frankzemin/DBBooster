<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Earthquake Setting Generator</title>
    <!-- Load Tailwind CSS -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Load Font Awesome Icons -->
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <style>
        /* Custom styles for the app */
        html, body { 
            height: 100%; 
            margin: 0; 
            padding: 0; 
            overflow: hidden; /* Prevent scrolling on the body */
        }
        body {
            font-family: 'Inter', sans-serif;
            background: linear-gradient(135deg, #0f172a, #1e293b);
            color: #e2e8f0;
            display: flex;
            flex-direction: column;
        }
        
        /* Inputs */
        .config-input, .config-select { 
            border: 1px solid #334155; 
            border-radius: 0.75rem; 
            padding: 1.25rem 1.5rem; 
            font-size: 1.25rem; 
            background: rgba(15, 23, 42, 0.7);
            color: #e2e8f0;
            transition: all 0.3s ease;
            box-shadow: 0 6px 12px rgba(0, 0, 0, 0.2);
            width: 100%;
        }
        .config-input:focus, .config-select:focus { 
            outline: none;
            border-color: #3b82f6; 
            box-shadow: 0 0 0 4px rgba(59, 130, 246, 0.3);
        }
        
        /* Number input specific styles */
        input[type="number"] {
            -moz-appearance: textfield;
        }
        
        input[type="number"]::-webkit-outer-spin-button,
        input[type="number"]::-webkit-inner-spin-button {
            -webkit-appearance: none;
            margin: 0;
        }
        
        /* Buttons */
        .btn-primary {
            background: linear-gradient(135deg, #3b82f6, #2563eb);
            color: white;
            font-weight: 600;
            padding: 1.25rem 2.5rem;
            border-radius: 0.75rem;
            transition: all 0.3s ease;
            box-shadow: 0 8px 16px rgba(0, 0, 0, 0.3);
            min-height: 60px;
            font-size: 1.25rem;
            width: 100%;
        }
        .btn-primary:hover {
            background: linear-gradient(135deg, #2563eb, #1d4ed8);
            transform: translateY(-3px);
            box-shadow: 0 12px 20px rgba(0, 0, 0, 0.4);
        }
        .btn-primary:active {
            transform: translateY(0);
        }
        
        .btn-secondary {
            background: rgba(51, 65, 85, 0.6);
            color: #e2e8f0;
            font-weight: 500;
            padding: 1.25rem 2.5rem;
            border-radius: 0.75rem;
            transition: all 0.3s ease;
            border: 1px solid #334155;
            min-height: 60px;
            font-size: 1.25rem;
            width: 100%;
        }
        .btn-secondary:hover {
            background: rgba(71, 85, 105, 0.7);
        }
        
        /* Card styling */
        .card {
            background: rgba(15, 23, 42, 0.8);
            backdrop-filter: blur(20px);
            border-radius: 1.5rem;
            border: 1px solid rgba(51, 65, 85, 0.5);
            box-shadow: 0 25px 50px rgba(0, 0, 0, 0.5);
            padding: 2.5rem;
            height: 100%;
            display: flex;
            flex-direction: column;
            min-height: 0;
        }
        
        /* Textarea */
        .output-area {
            background: rgba(2, 8, 23, 0.9);
            border: 1px solid #334155;
            border-radius: 1rem;
            color: #cbd5e1;
            font-family: 'Fira Code', 'Monaco', 'Consolas', monospace;
            padding: 2rem;
            resize: none;
            transition: border-color 0.3s ease;
            flex-grow: 1;
            min-height: 350px;
            font-size: 1.25rem;
            line-height: 1.7;
        }
        .output-area:focus {
            border-color: #3b82f6;
            outline: none;
        }
        
        /* Toast Notification */
        #toast {
            transition: all 0.3s ease-in-out;
            border-radius: 1rem;
            box-shadow: 0 20px 40px rgba(0, 0, 0, 0.5);
            font-size: 1.25rem;
            padding: 1.5rem 2rem;
            z-index: 1000;
        }
        
        /* Animation for earthquake effect */
        @keyframes shake {
            0%, 100% { transform: translateX(0); }
            10%, 30%, 50%, 70%, 90% { transform: translateX(-10px); }
            20%, 40%, 60%, 80% { transform: translateX(10px); }
        }
        
        .earthquake-shake {
            animation: shake 0.7s cubic-bezier(.36,.07,.19,.97) both;
        }
        
        /* Floating elements */
        .floating {
            animation: float 10s ease-in-out infinite;
        }
        
        @keyframes float {
            0% { transform: translateY(0px); }
            50% { transform: translateY(-20px); }
            100% { transform: translateY(0px); }
        }
        
        /* Seismic wave effect */
        .seismic-wave {
            position: absolute;
            border-radius: 50%;
            border: 4px solid rgba(59, 130, 246, 0.5);
            animation: ripple 5s infinite;
        }
        
        @keyframes ripple {
            0% {
                width: 0;
                height: 0;
                opacity: 0.7;
            }
            100% {
                width: 1000px;
                height: 1000px;
                opacity: 0;
            }
        }
        
        /* Responsive adjustments */
        @media (max-width: 1400px) {
            .card {
                padding: 2rem;
            }
            
            .btn-primary, .btn-secondary {
                padding: 1rem 2rem;
                font-size: 1.1rem;
                min-height: 50px;
            }
            
            .config-input, .config-select {
                padding: 1rem 1.25rem;
                font-size: 1.1rem;
            }
            
            .output-area {
                padding: 1.5rem;
                font-size: 1.1rem;
                min-height: 300px;
            }
        }
        
        @media (max-width: 1024px) {
            .card {
                padding: 1.75rem;
            }
            
            .grid-cols-1.xl\:grid-cols-2 {
                grid-template-columns: 1fr;
            }
            
            .flex-col.lg\:flex-row {
                flex-direction: column;
            }
            
            .output-area {
                min-height: 250px;
            }
        }
        
        @media (max-width: 768px) {
            .card {
                padding: 1.5rem;
            }
            
            .btn-primary, .btn-secondary {
                padding: 0.9rem 1.5rem;
                font-size: 1rem;
                min-height: 45px;
            }
            
            .config-input, .config-select {
                padding: 0.9rem 1.1rem;
                font-size: 1rem;
            }
            
            .output-area {
                padding: 1.25rem;
                font-size: 0.95rem;
                min-height: 200px;
            }
            
            .text-3xl.md\:text-5xl {
                font-size: 2rem;
            }
            
            .grid-cols-1.md\:grid-cols-2 {
                grid-template-columns: 1fr;
            }
        }
        
        @media (max-width: 480px) {
            .card {
                padding: 1.25rem;
            }
            
            .btn-primary, .btn-secondary {
                padding: 0.8rem 1.25rem;
                font-size: 0.95rem;
                min-height: 40px;
            }
            
            .config-input, .config-select {
                padding: 0.8rem 1rem;
                font-size: 0.95rem;
            }
            
            .output-area {
                padding: 1rem;
                font-size: 0.9rem;
            }
            
            .text-3xl.md\:text-5xl {
                font-size: 1.75rem;
            }
            
            .text-xl.md\:text-2xl {
                font-size: 1.25rem;
            }
        }
        
        /* Ultra-wide display handling */
        @media (min-width: 2200px) {
            .max-w-screen-2xl {
                max-width: 95%;
            }
            
            .card {
                padding: 4rem;
            }
            
            .btn-primary, .btn-secondary {
                padding: 1.75rem 3.5rem;
                font-size: 1.5rem;
                min-height: 80px;
            }
            
            .config-input, .config-select {
                padding: 1.75rem 2rem;
                font-size: 1.5rem;
            }
            
            .output-area {
                padding: 3rem;
                font-size: 1.5rem;
                min-height: 600px;
            }
            
            .text-3xl.md\:text-5xl {
                font-size: 3.5rem;
            }
            
            .text-xl.md\:text-2xl {
                font-size: 2rem;
            }
        }
        
        /* Tall display handling */
        @media (min-height: 1200px) {
            .output-area {
                min-height: 500px;
            }
        }
        
        /* Container for main content */
        .main-container {
            flex: 1;
            display: flex;
            flex-direction: column;
            overflow: hidden;
        }
        
        /* Content area */
        .content-area {
            flex: 1;
            overflow-y: auto; /* Allow scrolling within this area */
            padding: 2rem;
        }

        /* Responsive padding for content area */
        @media (max-width: 768px) {
            .content-area {
                padding: 1rem;
            }
        }

        @media (max-width: 480px) {
            .content-area {
                padding: 0.5rem;
            }
        }
        
        /* Smooth transitions */
        * {
            transition: all 0.3s ease-in-out;
        }
        
        /* Header styling */
        .header-section {
            margin-bottom: 2.5rem;
        }
        
        /* Section spacing */
        .section-spacing {
            margin-bottom: 2.5rem;
        }
        
        /* Input group */
        .input-group {
            margin-bottom: 2rem;
        }
        
        /* Output section */
        .output-section {
            height: 100%;
        }
        
        /* Stats cards */
        .stats-card {
            transition: transform 0.3s ease;
        }
        
        .stats-card:hover {
            transform: translateY(-5px);
        }
        
        /* Background elements */
        .bg-element {
            position: absolute;
            border-radius: 50%;
            filter: blur(60px);
            opacity: 0.3;
            z-index: -1;
        }
        
        /* Input container */
        .input-container {
            position: relative;
            display: flex;
            align-items: center;
        }
        
        .input-icon {
            position: absolute;
            left: 1.5rem;
            top: 50%;
            transform: translateY(-50%);
            z-index: 10;
            color: #3b82f6;
            font-size: 1.5rem;
        }
        
        .input-with-icon {
            padding-left: 4.5rem !important;
        }
        
        /* Compact info section */
        .info-section {
            background: rgba(30, 41, 59, 0.6);
            border-radius: 1.25rem;
            border: 1px solid rgba(51, 65, 85, 0.4);
            padding: 1.25rem;
            margin-top: 1rem;
        }
        
        .info-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
        }
        
        .info-item {
            display: flex;
            align-items: center;
            gap: 0.75rem;
        }
        
        .info-icon {
            background: rgba(59, 130, 246, 0.2);
            padding: 0.5rem;
            border-radius: 0.75rem;
            font-size: 1rem;
            min-width: 40px;
            height: 40px;
            display: flex;
            align-items: center;
            justify-content: center;
        }
        
        .info-content h3 {
            font-size: 0.95rem;
            font-weight: 600;
            margin-bottom: 0.25rem;
            color: #fff;
        }
        
        .info-content p {
            font-size: 0.85rem;
            color: #94a3b8;
            line-height: 1.4;
        }
        
        /* Collapsible about section */
        .about-section {
            background: rgba(30, 41, 59, 0.6);
            border-radius: 1.25rem;
            border: 1px solid rgba(51, 65, 85, 0.4);
            margin-top: 1rem;
            overflow: hidden;
        }
        
        .about-header {
            padding: 1rem 1.5rem;
            cursor: pointer;
            display: flex;
            justify-content: space-between;
            align-items: center;
        }
        
        .about-header:hover {
            background: rgba(51, 65, 85, 0.3);
        }
        
        .about-content {
            padding: 0 1.5rem 1.5rem 1.5rem;
            font-size: 0.95rem;
            color: #94a3b8;
            line-height: 1.6;
            display: none;
        }
        
        .about-content.expanded {
            display: block;
        }
        
        .toggle-icon {
            transition: transform 0.3s ease;
        }
        
        .toggle-icon.rotated {
            transform: rotate(180deg);
        }
    </style>
</head>
<body class="p-0 md:p-0">

    <!-- Background decorative elements -->
    <div class="fixed inset-0 overflow-hidden pointer-events-none">
        <div class="bg-element w-[50rem] h-[50rem] bg-blue-500 top-1/4 left-1/4"></div>
        <div class="bg-element w-[60rem] h-[60rem] bg-indigo-500 bottom-1/3 right-1/4"></div>
        <div class="bg-element w-[40rem] h-[40rem] bg-teal-500 top-1/2 left-1/2 transform -translate-x-1/2 -translate-y-1/2"></div>
    </div>

    <div class="max-w-full mx-auto bg-transparent rounded-none shadow-xl overflow-hidden flex flex-col h-screen relative">
        <!-- Main Content Area -->
        <main class="main-container">
            <div class="content-area">
                <div class="max-w-screen-2xl mx-auto w-full">
                    <div class="card mb-8">
                        <div class="header-section">
                            <div class="flex flex-col lg:flex-row justify-between items-start lg:items-center gap-8">
                                <div>
                                    <h1 class="text-4xl md:text-5xl font-bold text-white mb-4">Earthquake Step Generator</h1>
                                    <p class="text-blue-300 text-xl md:text-2xl">Generate formatted seismic analysis steps for structural simulations</p>
                                </div>
                                <div class="flex items-center gap-4 bg-blue-900/50 px-8 py-4 rounded-2xl">
                                    <i class="fas fa-wave-square text-blue-400 text-3xl"></i>
                                    <span class="text-xl font-semibold">Seismic Engineering</span>
                                </div>
                            </div>
                        </div>
                        
                        <div class="grid grid-cols-1 xl:grid-cols-2 gap-10 flex-grow">
                            <!-- Input Section -->
                            <div class="section-spacing">
                                <div class="bg-blue-900/40 p-7 rounded-3xl border border-blue-800/50 h-full">
                                    <div class="flex items-center gap-5 mb-7">
                                        <div class="bg-blue-500/30 p-4 rounded-2xl">
                                            <i class="fas fa-cog text-blue-400 text-2xl"></i>
                                        </div>
                                        <h2 class="text-2xl font-semibold text-white">Configuration</h2>
                                    </div>
                                    
                                    <div class="space-y-7">
                                        <div class="input-group">
                                            <label for="earthquake-steps-input" class="block text-lg font-medium text-blue-200 mb-3">
                                                Number of Steps (N):
                                            </label>
                                            <div class="flex flex-col lg:flex-row items-start lg:items-center gap-5">
                                                <div class="input-container w-full">
                                                    <div class="input-icon">
                                                        <i class="fas fa-hashtag"></i>
                                                    </div>
                                                    <input type="number" 
                                                           id="earthquake-steps-input" 
                                                           min="1" 
                                                           step="1" 
                                                           class="config-input input-with-icon w-full" 
                                                           placeholder="e.g., 10">
                                                </div>
                                                <button id="generate-earthquake-steps-btn" 
                                                        class="btn-primary flex items-center justify-center gap-3">
                                                    <i class="fas fa-bolt"></i>
                                                    <span>Generate Steps</span>
                                                </button>
                                            </div>
                                            <p class="mt-3 text-blue-300">
                                                Enter the number of earthquake analysis steps to generate formatted output lines.
                                            </p>
                                        </div>
                                        
                                        <div class="pt-6 border-t border-blue-800/50">
                                            <h3 class="text-xl font-medium text-white mb-4">Output Format</h3>
                                            <div class="bg-gray-900/70 p-5 rounded-2xl">
                                                <div class="text-blue-200 mb-3">Example Output:</div>
                                                <div class="font-mono text-base bg-black/50 p-4 rounded-xl overflow-x-auto">
                                                    &nbsp;&nbsp;&nbsp;&nbsp;100001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;00001&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<br>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;100002&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;00002&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1<br>
                                                    &nbsp;&nbsp;&nbsp;&nbsp;100003&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;00003&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;1
                                                </div>
                                                <div class="text-blue-300 mt-3">
                                                    Format: [4 spaces]1[step][5 spaces][step][14 spaces]1
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                                
                                <!-- Collapsible About Section -->
                                <div class="about-section mt-6">
                                    <div class="about-header" id="about-toggle">
                                        <div class="flex items-center gap-4">
                                            <div class="bg-indigo-500/30 p-3 rounded-xl">
                                                <i class="fas fa-info-circle text-indigo-400 text-xl"></i>
                                            </div>
                                            <h2 class="text-xl font-semibold text-white">About This Tool</h2>
                                        </div>
                                        <i class="fas fa-chevron-down toggle-icon" id="toggle-icon"></i>
                                    </div>
                                    <div class="about-content" id="about-content">
                                        <p>
                                            This generator creates formatted step definitions for seismic analysis in structural engineering simulations. 
                                            Each line represents a time step in the earthquake analysis sequence, formatted for compatibility with 
                                            structural analysis software.
                                        </p>
                                    </div>
                                </div>
                            </div>
                            
                            <!-- Output Section -->
                            <div class="section-spacing">
                                <div class="bg-gray-900/60 p-7 rounded-3xl border border-gray-700/70 h-full flex flex-col output-section">
                                    <div class="flex items-center justify-between mb-7">
                                        <div class="flex items-center gap-4">
                                            <div class="bg-green-500/30 p-4 rounded-2xl">
                                                <i class="fas fa-file-code text-green-400 text-2xl"></i>
                                            </div>
                                            <h2 class="text-2xl font-semibold text-white">Formatted Output</h2>
                                        </div>
                                        <div class="flex items-center gap-2 text-base bg-green-900/50 px-4 py-2 rounded-2xl">
                                            <div class="w-3 h-3 bg-green-400 rounded-full"></div>
                                            <span>Ready</span>
                                        </div>
                                    </div>
                                    
                                    <div class="flex-1 flex flex-col">
                                        <textarea id="earthquake-output" 
                                                  readonly 
                                                  class="output-area flex-1 mb-5"
                                                  placeholder="Click 'Generate Steps' to create formatted earthquake steps..."></textarea>
                                        
                                        <div class="grid grid-cols-1 md:grid-cols-2 gap-4">
                                            <button id="copy-earthquake-btn" 
                                                    class="btn-secondary flex items-center justify-center gap-3">
                                                <i class="fas fa-copy"></i>
                                                <span>Copy to Clipboard</span>
                                            </button>
                                            <button id="download-earthquake-btn" 
                                                    class="btn-secondary flex items-center justify-center gap-3">
                                                <i class="fas fa-download"></i>
                                                <span>Download as TXT</span>
                                            </button>
                                        </div>
                                    </div>
                                </div>
                                
                                <div class="grid grid-cols-1 md:grid-cols-2 gap-4 mt-5">
                                    <div class="stats-card bg-teal-900/40 p-5 rounded-2xl border border-teal-800/50 hover:bg-teal-900/50 transition-all">
                                        <div class="text-teal-200 text-sm mb-1">Steps Generated</div>
                                        <div class="text-2xl font-bold text-white" id="steps-count">0</div>
                                    </div>
                                    <div class="stats-card bg-purple-900/40 p-5 rounded-2xl border border-purple-800/50 hover:bg-purple-900/50 transition-all">
                                        <div class="text-purple-200 text-sm mb-1">Lines Created</div>
                                        <div class="text-2xl font-bold text-white" id="lines-count">0</div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Compact Information Section -->
                    <div class="info-section">
                        <div class="info-grid">
                            <div class="info-item">
                                <div class="info-icon bg-blue-500/20 text-blue-400">
                                    <i class="fas fa-microscope"></i>
                                D                                </div>
                                <div class="info-content">
                                    <h3>Scientific Precision</h3>
                                    <p>Precise formatting for accurate seismic analysis</p>
                                </div>
                            </div>
                            
                            <div class="info-item">
                                <div class="info-icon bg-green-500/20 text-green-400">
                                    <i class="fas fa-bolt"></i>
                                </div>
                                <div class="info-content">
                                    <h3>Instant Generation</h3>
                                    <p>Generate thousands of steps in milliseconds</p>
                                </div>
                            </div>
                            
                            <div class="info-item">
                                <div class="info-icon bg-purple-500/20 text-purple-400">
                                    <i class="fas fa-shield-alt"></i>
                                </div>
                                <div class="info-content">
                                    <h3>Secure Processing</h3>
                                    <p>All processing happens locally in your browser</p>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </main>
    </div> 
    
    <!-- Toast Notification -->
    <div id="toast" class="fixed bottom-8 right-8 bg-gray-900 text-white px-6 py-4 rounded-2xl shadow-2xl opacity-0 pointer-events-none">
        <span id="toast-message"></span>
    </div>

    <script>
        document.addEventListener('DOMContentLoaded', () => {
            // --- Earthquake Setting Functions ---
            
            function generateEarthquakeSteps() {
                const input = document.getElementById('earthquake-steps-input');
                const output = document.getElementById('earthquake-output');
                const stepsCount = document.getElementById('steps-count');
                const linesCount = document.getElementById('lines-count');
                
                if (!input || !output) return;
                
                const num = parseInt(input.value, 10);
                
                if (isNaN(num) || num < 1) {
                    showToast("Please enter a valid number of steps (minimum 1).", "error");
                    output.value = "";
                    stepsCount.textContent = "0";
                    linesCount.textContent = "0";
                    return;
                }
                
                // Add earthquake shake effect to the card
                const card = document.querySelector('.card');
                if (card) {
                    card.classList.add('earthquake-shake');
                    setTimeout(() => {
                        card.classList.remove('earthquake-shake');
                    }, 700);
                }
                
                // Generate formatted output lines
                const lines = [];
                for (let i = 1; i <= num; i++) {
                    // Format: "1" (padded to 5 chars) + i (padded to 5) + 5 spaces + i (padded to 5) + 14 spaces + "1"
                    // Correcting the format based on the example "100001" which seems to be "1" + "00001" (no space)
                    // The example in the UI "100001     00001              1" seems to imply "1" + "00001"
                    // Let's re-read the example.
                    // "100001     00001              1"
                    // This looks like "100001" (6 chars) + "     " (5 spaces) + "00001" (5 chars) + "              " (14 spaces) + "1"
                    // The "100001" part is likely "1" concatenated with the 5-digit step number.
                    const stepStr = i.toString().padStart(5, '0');
                    // New format: [4 spaces]1[0 spaces][stepStr][5 spaces][stepStr][14 spaces]1
                    const line = `${" ".repeat(4)}1${stepStr}${" ".repeat(5)}${stepStr}${" ".repeat(14)}1`;
                    lines.push(line);
                }
                
                output.value = lines.join('\n');
                stepsCount.textContent = num;
                linesCount.textContent = num;
                showToast(`Generated ${num} earthquake steps successfully!`, "success");
            }
            
            function copyOutput_Earthquake() {
                const output = document.getElementById('earthquake-output');
                
                if (!output || !output.value) {
                    showToast("Nothing to copy.", "error");
                    return;
                }
                
                try {
                    output.select();
                    output.setSelectionRange(0, output.value.length); // For mobile devices - Changed 99999 to full length
                    
                    // Use document.execCommand as a fallback
                    if (!document.execCommand('copy')) {
                        throw new Error('execCommand failed');
                    }
                    showToast("Copied to clipboard!", "success");

                } catch (err) {
                    // Fallback for environments where execCommand is restricted (like some iframes)
                    // We can't use navigator.clipboard.writeText easily here without user gesture context in secure origins.
                    // But execCommand is generally more reliable in this sandboxed environment.
                    console.error("Copy failed:", err);
                    showToast("Copy failed. Please try again or copy manually.", "error");
                }
            }
            
            function downloadOutput_Earthquake() {
                const output = document.getElementById('earthquake-output');
                
                if (!output || !output.value) {
                    showToast("Nothing to download.", "error");
                    return;
                }
                
                try {
                    const blob = new Blob([output.value], { type: 'text/plain' });
                    const url = URL.createObjectURL(blob);
                    const a = document.createElement('a');
                    a.href = url;
                    a.download = 'earthquake_steps.txt';
                    document.body.appendChild(a);
                    a.click();
                    document.body.removeChild(a);
                    URL.revokeObjectURL(url);
                    showToast("Downloaded successfully!", "success");
                } catch (err) {
                    showToast("Download failed. Please try again.", "error");
                }
            }
            
            // --- Collapsible About Section ---
            function toggleAboutSection() {
                const content = document.getElementById('about-content');
                const icon = document.getElementById('toggle-icon');
                
                if(content && icon) {
                    content.classList.toggle('expanded');
                    icon.classList.toggle('rotated');
                }
            }
            
            // Add event listener to about section toggle
            document.getElementById('about-toggle')?.addEventListener('click', toggleAboutSection);
            
            // --- Toast Notification System ---
            let toastTimer;
            
            function showToast(message, type = "info") {
                const toast = document.getElementById('toast');
                const msg = document.getElementById('toast-message');
                
                if (!toast || !msg) return;
                
                // Reset classes and set message
                toast.className = 'fixed bottom-8 right-8 text-white px-6 py-4 rounded-2xl shadow-2xl opacity-100 pointer-events-auto';
                msg.textContent = message;
                
                // Set background color based on type
                const colorClasses = {
                    "success": "bg-green-600",
                    "error": "bg-red-600",
                    "warning": "bg-yellow-600",
                    "info": "bg-gray-900"
                };
                
                // Add appropriate color class
                toast.classList.add(colorClasses[type] || colorClasses["info"]);
                
                // Clear any existing timer
                clearTimeout(toastTimer);
                
                // Set timer to hide toast
                toastTimer = setTimeout(() => {
                    toast.classList.remove('opacity-100');
                    toast.classList.add('opacity-0', 'pointer-events-none');
                }, 4000);
            }
            
            // --- Event Listeners ---
            document.getElementById('generate-earthquake-steps-btn')?.addEventListener('click', generateEarthquakeSteps);
            document.getElementById('copy-earthquake-btn')?.addEventListener('click', copyOutput_Earthquake);
            document.getElementById('download-earthquake-btn')?.addEventListener('click', downloadOutput_Earthquake);

            // Allow Enter key to trigger generation in the input field
            document.getElementById('earthquake-steps-input')?.addEventListener('keypress', (e) => {
                if (e.key === 'Enter') {
                    e.preventDefault(); // Prevent form submission if it's in a form
                    generateEarthquakeSteps();
                }
            });
            
            // Handle window resize for responsive behavior
            let resizeTimer;
            window.addEventListener('resize', () => {
                clearTimeout(resizeTimer);
                resizeTimer = setTimeout(() => {
                    // This is a good place to re-calculate any dynamic sizing if needed
                    document.body.classList.add('resizing');
                    setTimeout(() => {
                        document.body.classList.remove('resizing');
                    }, 200);
                }, 200);
            });
        });
    </script>
</body>
</html>



